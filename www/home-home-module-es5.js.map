{"version":3,"sources":["./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.scss","./src/app/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Aplicação SQLite\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding text-center>\\n  <ion-button expand=\\\"block\\\" (click)=\\\"createDB()\\\">\\n      Criar Banco de dados\\n  </ion-button>\\n\\n  <ion-button expand=\\\"block\\\" (click)=\\\"createTable()\\\">\\n    Criar tabela\\n  </ion-button>\\n \\n  <ion-button expand=\\\"block\\\" (click)=\\\"getRows()\\\">\\n    Listar registros\\n  </ion-button>\\n\\n\\n  <ion-item-divider>\\n    <ion-input placeholder=\\\"Digite o nome\\\" [(ngModel)]=\\\"name_model\\\"></ion-input>\\n    <ion-button expand=\\\"block\\\" (click)=\\\"insertRow()\\\">\\n      Inserir registros\\n    </ion-button>\\n  </ion-item-divider>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n       ID\\n      </ion-col>\\n      <ion-col>\\n        Nome\\n      </ion-col>\\n      <ion-col>\\n        Excluir\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngFor=\\\"let item of row_data\\\">   \\n      <ion-col>\\n        {{item.pid}}\\n      </ion-col>\\n      <ion-col>\\n         <ion-input placeholder=\\\"Enter name\\\" [(ngModel)]=\\\"item.pid\\\"  value={{item.value}}></ion-input>>\\n           <ion-button (click)=\\\"editRow(item)\\\" size=\\\"small\\\" color=\\\"danger\\\">\\n               <ion-icon name=\\\"pencil\\\"></ion-icon>\\n           </ion-button>  \\n      </ion-col>      \\n      <ion-col>\\n        <ion-button (click)=\\\"deleteRow(item)\\\" size=\\\"small\\\" color=\\\"danger\\\">\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\n\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { Platform } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  databaseObj: SQLiteObject; // Database instance object\n  name_model:string = \"\"; // Input field model\n  row_data: any = []; // Table rows\n  readonly database_name:string = \"ipec.db\"; // DB name\n  readonly table_name:string = \"tbProdutor\"; // Table name\n  constructor(private sqlite: SQLite, private platform: Platform) {\n\n    this.platform.ready().then(() => {\n         this.createDB();\n      }).catch(error => {\n      console.log(error);\n    })\n  }// todos sao publicos como se fosse set get \n\n  createDB() {  // metodo classe db\n    this.sqlite.create({\n      name: this.database_name,  // this reverenciar a variavel dela mesmo\n      location: 'default'\n    })\n      .then((db: SQLiteObject) => { // promessa foi feita\n        this.databaseObj = db;\n        alert('Database criado !');\n      })\n      .catch(e=> {  // a letra \"e\" alias pode ser alguer nome , Ex: erro\n        alert(\"erro : \" + JSON.stringify(e))  // convert objeto para string\n      });\n  }\n\n  createTable() {\n    this.databaseObj.executeSql('CREATE TABLE IF NOT EXISTS ' + this.table_name + ' (pid INTEGER PRIMARY KEY, Name varchar(255))', [])\n      .then(() => {  // then () nao recebe nada\n        alert('Tabela criada !');\n      })\n      .catch(e => {\n        alert(\"erro : \" + JSON.stringify(e))\n      });\n  }\n\n  insertRow() {\n    if (!this.name_model.length) {\n      alert(\"Enter Name\");\n      return;\n    }\n    this.databaseObj.executeSql('INSERT INTO ' + this.table_name + ' (Name) VALUES (\"' + this.name_model + '\")', [])\n      .then(() => {\n        alert('Registro inserido !');\n        this.getRows();\n      })\n      .catch(e => {\n        alert(\"erro : \" + JSON.stringify(e))\n      });\n  }\n\n  editRow(item) {\n    if (!this.name_model.length) {\n      alert(\"Enter Name\");\n      return;\n    }\n    this.databaseObj.executeSql(\"update \"+this.table_name + \"set name=\"+this.name_model+\" WHERE pid = \" + item.pid , [])\n      .then(() => {\n        alert('Registro alterado !');\n        this.getRows();\n      })\n      .catch(e => {\n        alert(\"erro : \" + JSON.stringify(e))\n      });\n  }\n\n  getRows() {\n    this.databaseObj.executeSql(\"SELECT * FROM \" + this.table_name, [])\n      .then((res) => {\n        this.row_data = []; // atribui row_data como array vazio para preencher \n        if (res.rows.length > 0) {  // quantidade de registros da tabela\n          for (var i = 0; i < res.rows.length; i++) {\n            this.row_data.push(res.rows.item(i));  // inserindo registro na array\n          }\n        }\n      })\n      .catch(e => {\n        alert(\"erro : \" + JSON.stringify(e))\n      });\n  }\n\n  deleteRow(item) {\n    this.databaseObj.executeSql(\"DELETE FROM \" + this.table_name + \" WHERE pid = \" + item.pid, [])\n      .then((res) => {\n        alert(\"Registro removido !\");\n        this.getRows();\n      })\n      .catch(e => {\n        alert(\"erro : \" + JSON.stringify(e))\n      });\n  }\n\n}\n"],"sourceRoot":""}